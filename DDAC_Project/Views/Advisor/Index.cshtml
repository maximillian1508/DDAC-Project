@model DDAC_Project.Controllers.AdvisorController.IndexViewModel
@{
}

<div style="display: flex; flex-direction: row; margin: 40px; justify-content: center">
    <div style="border: groove; border-radius: 5px; width: 350px; height: 150px">
        <div style="background-color: #f0f0f0">
            <h5 style="padding: 10px">Total Assigned Clients</h5>
        </div>
        <p style="display: flex; justify-content: center; font-size: 27px; font-weight: bold; padding-top: 18px">@Model.ClientCount / 3</p>
    </div>
    <div style="border: groove; border-radius: 5px; width: 350px; height: 150px; margin-left: 80px; margin-right: 80px">
        <div style="background-color: #f0f0f0">
            <h5 style="padding: 10px">Total Comments This Month</h5>
        </div>
        <p style="display: flex; justify-content: center; font-size: 27px; font-weight: bold; padding-top: 18px">@Model.CommentCount</p>
    </div>
    <div style="border: groove; border-radius: 5px; width: 350px; height: 150px">
        <div style="background-color: #f0f0f0">
            <h5 style="padding: 10px">Total Managed Assets</h5>
        </div>
        <p style="display: flex; justify-content: center; font-size: 27px; font-weight: bold; padding-top: 18px">RM @Model.ManagedAssets.ToString("N2")</p>
    </div>
</div>
<div style="display: flex; flex-direction: row; justify-content: space-between; width:75%; margin: 0 auto 40px auto">
    <div style="width: 55%">
        <canvas id="myChart" Style="height:400px; width: 100%"></canvas>

        <script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var clientData = @Html.Raw(Json.Serialize(Model.ClientAssets));
    
    // Define an array of colors
            var colors = ['rgba(255, 99, 132, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(216, 235, 52, 0.8)'];
    
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: clientData.map(item => item.name),
            datasets: [{
                label: 'Total Assets (RM)',
                data: clientData.map(item => item.assets),
                backgroundColor: clientData.map((_, index) => colors[index % colors.length]),
                borderColor: clientData.map((_, index) => colors[index % colors.length].replace('0.8', '1')),
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value, index, values) {
                            return 'RM ' + value.toFixed(2);
                        }
                    }
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return 'RM ' + context.parsed.y.toFixed(2);
                        }
                    }
                },
                legend: {
                    display: false // Hide the legend as it's not needed for this chart
                }
            }
        }
    });
</script>
    </div>
    <div style="border: groove; border-radius: 5px; width: 40%; margin-left: 100px">
        <div style="background-color: #f0f0f0">
            <h4 style="padding: 10px">Assigned Users</h4>
            <p style="padding: 10px">Users under you.</p>
        </div>
        <p style="padding: 10px">User List</p>
        @if (!Model.AssignedClients.Any())
        {
            <p style="padding: 10px">No clients assigned yet.</p>
        }
        else
        {
            @foreach (var client in Model.AssignedClients)
            {
                <div style="display: flex; flex-direction: row; justify-content: space-between; padding: 10px">
                    <p><i class="fa-regular fa-user"></i>&nbsp;&nbsp;&nbsp;@($"{client.FirstName} {client.LastName}")</p>
                    <a asp-controller="Advisor" asp-action="FinancialAnalysis" asp-route-clientId="@client.Id" style="color:black; font-size: 20px; margin-left: auto">
                        <i class="fa-solid fa-chart-pie"></i>
                    </a>
                </div>
            }
        }
    </div>
</div>